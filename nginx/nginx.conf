# User and worker settings
user nginx;
worker_processes 1;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;

    # HTTP server block (Redirect HTTP to HTTPS)
    server {
        listen 80;
        server_name yourdomain.com www.yourdomain.com;
        root /usr/share/nginx/html;
        index index.html;

        # Redirect all HTTP traffic to HTTPS
        return 301 https://$host$request_uri;

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api/ {
            proxy_pass http://backend:5000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Origin $http_origin;  # Ensure the Origin header is forwarded
        }
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        http2 on;
        server_name yourdomain.com www.yourdomain.com;

        # SSL certificates
         ssl_certificate /etc/ssl/certs/mindcraftai-ssl.crt;
         ssl_certificate_key /etc/ssl/private/mindcraftai.live.key;
         ssl_trusted_certificate /etc/ssl/certs/mindcraftai-ca.crt;

        # SSL settings
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers off;

        # Enable HSTS (HTTP Strict Transport Security)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # Security headers
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Root directory for frontend
        root /usr/share/nginx/html;
        index index.html;

        # Serve frontend files
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Proxy backend API requests
        location /api/ {
            proxy_pass http://backend:5000;  # Adjust as needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header Origin $http_origin;  # Ensure the Origin header is forwarded
        }
    }
}
