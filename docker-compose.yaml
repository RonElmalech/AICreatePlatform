name: Docker CI/CD

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    services:
      # Frontend
      frontend:
        build:
          context: ./frontend
          dockerfile: Dockerfile
        networks:
          - app-network
        volumes:
          - ./frontend/dist:/usr/share/nginx/html
          - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro


      # Backend
      backend:
        build:
          context: ./backend
          dockerfile: Dockerfile
        ports:
          - "5000:5000"
        container_name: backend
        volumes:
          - ./backend:/app
          - /app/node_modules
        networks:
          - app-network

      # Nginx
      nginx:
        image: nginx:latest
        ports:
          - "80:80"
        depends_on:
          - frontend
          - backend
        volumes:
          - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
          - ./frontend/dist:/usr/share/nginx/html
        networks:
          - app-network
 # Pass BACKEND_URL as environment variable

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Log in to GitHub Docker Registry
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.GITHUB_USERNAME }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker images
      run: |
        docker-compose -f docker-compose.yml build
        docker-compose -f docker-compose.yml push


    - name: Deploy Docker containers
      run: |
        docker-compose -f docker-compose.yml up -d

    networks:
      app-network:
        driver: bridge
